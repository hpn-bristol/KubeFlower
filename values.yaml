# Default values for emho-helm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""

server:
  name: kubeflower
  replicaCount: 1
  image:
    repository: juanmarcelouob/kubeflower
    pullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["python ./src/server.py"]
    ports:
    - containerPort: 8080
    # Overrides the image tag whose default is the chart appVersion.
    tag: cpu

  nameOverride: "server"
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: NodePort
  externalPort: 30101
  internalPort: 5999
  nodePort: 30101
  name: http
  externalTrafficPolicy: Local

ingress:
  enabled: false
  className: nginx
  annotations: {nginx.ingress.kubernetes.io/rewrite-target: /}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  #hosts:
  #  - host: chart-example.local
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local



client:
  name: kubeflower
  nameOverride: "client"
  replicaCount: 3

  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%

  image:
    repository: juanmarcelouob/kubeflower
    imagePullPolicy: IfNotPresent
    command: ["/bin/sh", "-c"]
    args: ["python ./src/client.py --server 'service-server' --port '30051'"]
    ports:
    - containerPort: 30051
    # Overrides the image tag whose default is the chart appVersion.
    tag: cpu

  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {'podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions: [{ key: app, operator: In, values: [flower-client] }]
              topologyKey: "kubernetes.io/hostname"'}
